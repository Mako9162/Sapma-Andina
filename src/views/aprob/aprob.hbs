<body class="with-side-menu">
	{{> navbar }}

	<div class="mobile-menu-left-overlay-"></div> 

	{{> nav }}
	<div class="page-content">
		<div class="container-fluid">
			<header class="section-header">
				<div class="tbl">
					<div class="tbl-row">
						<div class="tbl-cell">
							<h3>Tareas pendientes de aprobación </h3>
							<ol class="breadcrumb breadcrumb-simple">
								<li><a href="/home">Inicio</a></li>
								<li class="active">Tareas pendientes</li>
							</ol>
						</div>
						<div class="form-group float-right">
                            <button type="button" class="btn btn-rounded btn-warning" id="pdfs" name="pdfs" hidden="true" ><i class="fa fa-file-pdf-o"></i></button>
							<button type="button" class="btn btn-rounded btn-warning" id="pdfs1" name="pdfs1" hidden="true" ><i class="fa fa-file-pdf-o"></i></button>
						</div>
					</div>
				</div>
					<style>
						.miClase {
							font-family: Verdana, Geneva, Tahoma, sans-serif;
							font-size: 12px; /* Cambia el tamaño de la fuente a 14px */
						}
						.dataTables_filter {
							float: left;
						}
						.dt-buttons {
							float: right;
						}
					</style>
			</header>
			<div class="box-typical box-typical-padding">
				<div class="row">
					<form action="" method="post" return="false">
				</div>
				<style>
					#check-toggle-2:checked + label::before {
						background-color: rgb(14, 228, 18);
						border-color: rgb(14, 228, 18);
					}
				</style>
				<br>
					<div class="checkbox-toggle" id="second-div">
						<input type="checkbox" id="check-toggle-2" >
						<label for="check-toggle-2">Seleccionar todo</label>
					</div>
					<table id="tabla_prot" class="table table-bordered table-striped table-vcenter js-dataTable-full">
						{{#ifEquals user.Id_Perfil "2"}}
					<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th hidden="true">Tarea anterior</th>
								<th hidden="true">Fecha anterior</th>
								<th hidden="true">Estado anterior</th>
								<th>Ver</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprob}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td hidden="true">{{TAREA_ANTERIOR}}</td>
								<td hidden="true">{{FECHA_ANTERIOR}}</td>
								<td hidden="true">{{ESTADO_EQUIPO_ANTERIOR}}</td>
								<td><center><a href="/protocolo/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "9"}}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th hidden="true">Tarea anterior</th>
								<th hidden="true">Fecha anterior</th>
								<th hidden="true">Estado anterior</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprob}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td hidden="true">{{TAREA_ANTERIOR}}</td>
								<td hidden="true">{{FECHA_ANTERIOR}}</td>
								<td hidden="true">{{ESTADO_EQUIPO_ANTERIOR}}</td>
								<td><center><a href="/protocolo/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "6" }}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th hidden="true">Tarea anterior</th>
								<th hidden="true">Fecha anterior</th>
								<th hidden="true">Estado anterior</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprob}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td hidden="true">{{TAREA_ANTERIOR}}</td>
								<td hidden="true">{{FECHA_ANTERIOR}}</td>
								<td hidden="true">{{ESTADO_EQUIPO_ANTERIOR}}</td>
								<td><center><a href="/protocoloc/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "5"}}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprobb}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td><center><a href="/protocolob/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "10"}}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprobb}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td><center><a href="/protocolob/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "4" }}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aproba}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td><center><a href="/protocoloa/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "7" }}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprob}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td><center><a href="/protocolod/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
						{{#ifEquals user.Id_Perfil "8" }}
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Estado de tarea</th>
								<th>Tipo de servicio</th>
								<th>Tag</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Detalle de ubicación</th>
								<th>Ubicación técnica</th>
								<th>Estado equipo</th>
								<th>Observación Estado</th>
								<th>Repuestos</th>
								<th>Ver</th>
								<th>Observaciones</th>
							</tr>
						</thead>
						<tbody>
							{{#each aprob}}
							<tr>
								<td>{{TAREA}}</td>
								<td>{{TAREA}}</td>
								<td>{{FECHA}}</td>
								<td>{{ESTADO_TAREA}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{CODIGO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{DETALLE}}</td>
								<td>{{TECNICA}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBS_EQUIPO}}</td>
								<td>{{REPUESTOS}}</td>
								<td><center><a href="/protocoloe/{{ TAREA }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								<td><input class="form-control" id="obs" name="obs" maxlength="300"></input></td>
							</tr>
							{{/each}}
						</tbody>
						{{/ifEquals}}
					</table>
					</form>
					<br><br>
					{{#ifEquals user.Id_Perfil "6" }}
						<button class="btn btn-rounded btn-success" id="aprob" name="aprob" disabled="true">Aprobar</button>	
						<button class="btn btn-rounded btn-danger float-right" id="rechazar" name="rechazar" disabled="true">Rechazar</button>	
					{{/ifEquals}}
					{{#ifEquals user.Id_Perfil "9" }}
						<button class="btn btn-rounded btn-success" id="aprocli" name="aprocli" disabled="true">Aprobar</button>	
						<button class="btn btn-rounded btn-danger float-right" id="readcli" name="readcli" disabled="true">Rechazar</button>	
					{{/ifEquals}}
					{{#ifEquals user.Id_Perfil "5" }}
						<button class="btn btn-rounded btn-success" id="aprobb" name="aprobb" disabled="true">Aprobar</button>	
						<button class="btn btn-rounded btn-danger float-right" id="rechazarb" name="rechazarb" disabled="true">Rechazar</button>	
					{{/ifEquals}}
					{{#ifEquals user.Id_Perfil "4" }}
						<button class="btn btn-rounded btn-success" id="aproba" name="aproba" disabled="true">Aprobar</button>	
						<button class="btn btn-rounded btn-danger float-right" id="rechazara" name="rechazara" disabled="true">Rechazar</button>	
					{{/ifEquals}}
					{{#ifEquals user.Id_Perfil "7" }}
						<button class="btn btn-rounded btn-success" id="aprobd" name="aprobd" disabled="true">Aprobar</button>	
						<button class="btn btn-rounded btn-danger float-right" id="rechazard" name="rechazard" disabled="true">Rechazar</button>	
					{{/ifEquals}}
					{{#ifEquals user.Id_Perfil "8" }}
						<button class="btn btn-rounded btn-success" id="aprobe" name="aprobe" disabled="true">Aprobar</button>	
						<button class="btn btn-rounded btn-danger float-right" id="rechazare" name="rechazare" disabled="true">Rechazar</button>	
					{{/ifEquals}}
			</div>
		</div>	
	</div>
	<script src="/js/lib/jquery/jquery.min.js"></script>
	<script src="/js/lib/tether/tether.min.js"></script>
	<script src="/js/lib/bootstrap/bootstrap.min.js"></script>
	<script src="/js/plugins.js"></script>
	<script src="/js/app.js"></script>
	<script src="/js/lib/datatables-net/datatables.min.js"></script>
	<script src="/js/lib/bootstrap-sweetalert/sweetalert.min.js"></script>
	<script src="/js/lib/summernote/summernote.min.js"></script>
	<script src="/js/lib/fancybox/jquery.fancybox.pack.js"></script>
	<script src="/js/summernote-ES.js"></script>
	<script src="/js/lib/select2/select2.full.min.js"></script>
	<script type="text/javascript" src="https://gyrocode.github.io/jquery-datatables-checkboxes/1.2.12/js/dataTables.checkboxes.min.js"></script>
		<script>
		var table;
		var counterChecked = 0;
		var userProfileId = '{{user.Id_Perfil}}';
		$(document).ready(function () {
			table = $('#tabla_prot').DataTable({	
				"createdRow": function (row, data, dataIndex) {
					if (userProfileId === '2' || userProfileId === '6' || userProfileId === '9') {
						if (!(data[11] == "Sistema operativo" || data[15] == "Sistema operativo" || data[15] == "")) {
							var titleText = 'Estado del equipo anterior: '+'\n' + data[16] + '\n' + 
							'Tarea anterior: ' + data[14] + '\n' +
							'Fecha anterior: ' + data[15];
							$('td:eq(11)', row).attr('title', titleText).html('<span class="alerta">⚠️</span> ' + data[11]);
						}
					}
				},
				'columnDefs': [
					{
						'targets': 0,
						'checkboxes': {
							'selectRow': true
						}
					}, 
					{ 
						"targets": [1,2,3,4,5,6,7,8,9,10,11,12,13], 
						"className": "miClase" 
					},
					{ 	
						"width": "60px", 
						"targets": 2 
					},
					{ 	
						"width": "130px", 
						"targets": 5 
					}
				],
				'select': {
					'style': 'multi'
				},
				"dom": 'Bf<"filters">rtip',
				"searching": true,
				"lengthChange": false,
				"colReorder": true,
				"buttons": [
				{
					"extend": 'excelHtml5',
					"text": '<i class="fa fa-file-excel-o"></i>',
					"title": 'SAPMA',
					"titleAttr": 'Exportar a Excel',
					"className": 'btn btn-rounded btn-success',
					"exportOptions": {
					"columns": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
					},
					customize: function(xlsx) {
					const sheet = xlsx.xl.worksheets['sheet1.xml'];
						$('row:first c', sheet).attr('s', '47');
            		}
				}],
				initComplete: function() {
				$('.filters').html(`
					<style>
					#parentFilter {
					float: left;
					margin-left: 15px;
					}

					#parentSelect {
					height: 38px;
					width: 100%;
					border: 1px solid rgb(227, 227, 227);
					border-radius: 4px;
					}

					#infoFilter {
					float: left;
					margin-left: 15px;
					}

					#infoSelect {
					height: 38px;
					width: 100%;
					border: 1px solid rgb(227, 227, 227);
					border-radius: 4px;
					}

					#subInfoFilter {
					float: left;
					margin-left: 15px;
					}

					#subInfoSelect {
					height: 38px;
					width: 100%;
					border: 1px solid rgb(227, 227, 227);
					border-radius: 4px;
					}

					@media (max-width: 768px) {
					#parentFilter,
					#infoFilter,
					#subInfoFilter {
						float: none;
						margin-left: 0;
					}

					#parentSelect,
					#infoSelect,
					#subInfoSelect {
						width: 100%;
					}
					</style>			
					<div>
						<div id="parentFilter">
							<select id="parentSelect" width: 50%;>
							</select>
						</div>
						<div id="infoFilter">
							<select id="infoSelect" width: 50%;>
							</select>
						</div>
						<div id="subInfoFilter">
							<select id="subInfoSelect" width: 50%;">
							</select>
						</div>
					</div>
				`);
				},
				"bDestroy": true, 	
				"scrollX": true,
    			"scrollCollapse": true,
				"fixedColumns":   {
					"leftColumns": 3//Le indico que deje fijas solo las 2 primeras columnas
				},
				"bInfo": true,
				"iDisplayLength": 20,
				"autoWidth": true,
				"language": {
					"sProcessing": "Procesando...",
					"sLengthMenu": "Mostrar _MENU_ registros",
					"sZeroRecords": "No se encontraron resultados",
					"sEmptyTable": "Ningún dato disponible en esta tabla",
					"sInfo": "Mostrando un total de _TOTAL_ registros",
					"sInfoEmpty": "Mostrando un total de 0 registros",
					"sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
					"sInfoPostFix": "",
					"sSearch": "Buscar:",
					"sUrl": "",
					"sInfoThousands": ".",
					"sLoadingRecords": "Cargando...",
					"oPaginate": {
						"sFirst": "Primero",
						"sLast": "Último",
						"sNext": "Siguiente",
						"sPrevious": "Anterior"
					},
					"oAria": {
						"sSortAscending": ": Activar para ordenar la columna de manera ascendente",
						"sSortDescending": ": Activar para ordenar la columna de manera descendente"
					},
					"select" : {
						"rows" : {
							"_" : "Has seleccionado %d filas",
							"0" : "Click en una fila para seleccionar",
							"1" : "Has seleccionado 1 fila"
						}
					}
				},
			}).on( 'select.dt deselect.dt', function ( e, dt, type, indexes ) {	
				var count = table.rows( { selected: true } ).count();
				if (count > 0) {
					$('#aprob').prop('disabled', false);
					$('#rechazar').prop('disabled', false);
					$('#aprobb').prop('disabled', false);
					$('#rechazarb').prop('disabled', false);
			        $('#aproba').prop('disabled', false);
					$('#rechazara').prop('disabled', false);
			        $('#aprobd').prop('disabled', false);
					$('#rechazard').prop('disabled', false);
					$('#aprobe').prop('disabled', false);
					$('#rechazare').prop('disabled', false);
					$('#aprocli').prop('disabled', false);
					$('#readcli').prop('disabled', false);
				} else {
					$('#aprobd').prop('disabled', true);
					$('#rechazard').prop('disabled', true);
				    $('#aproba').prop('disabled', true);
					$('#rechazara').prop('disabled', true);
					$('#aprob').prop('disabled', true);
					$('#rechazar').prop('disabled', true);
			        $('#aprobb').prop('disabled', true);
					$('#rechazarb').prop('disabled', true);
					$('#aprobe').prop('disabled', true);
					$('#rechazare').prop('disabled', true);
					$('#aprocli').prop('disabled', true);
					$('#readcli').prop('disabled', true);
				}

				if (count === 1) {
					$("#pdfs1").prop("hidden", false);
					$("#pdfs").prop("hidden", true);
				} else if (count > 1) {
					$("#pdfs").prop("hidden", false);
					$("#pdfs1").prop("hidden", true);
				} else {
					$("#pdfs").prop("hidden", true);
					$("#pdfs1").prop("hidden", true);
				}
			}).columns.adjust();

			var pro = table.column(3).data();

			pro.each(function(value, index) {
				if (value === "No Realizada") {
					var row = table.row(index).node();
					$(row).find("td:eq(17) a").remove();
				}
			});

			var rowsSelectable = false;

			table.on('select', function(e, dt, type, indexes) {
				if (type === 'row' && !rowsSelectable) {
					var data = table.rows(indexes).data().toArray();
					if (data[0][3] === 'No Realizada') {
						table.rows(indexes).deselect();
					}
				}
			});

			var parentValues = table.column(6).data().unique();
			parentValues.sort();
			$('#parentFilter select').append('<option value="">Seleccione una gerencia</option>');
			parentValues.each(function(value) {
				$('#parentFilter select').append('<option value="' + value + '">' + value + '</option>');
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			$('#parentFilter select').on('change', function() {
				var selectedParent = $(this).val();
				if (!selectedParent) {
					table.search('').columns().search('').draw();
					$('#infoFilter select').empty();
					$('#subInfoFilter select').empty();
					return;
				}
				table.column(6).search(selectedParent).draw();
				$('#infoFilter select').empty();
				$('#subInfoFilter select').empty();
				var infoValues = table
					.column(7)
					.data()
					.filter(function(value, index) {
						return table.column(6).data()[index] === selectedParent;
					})
					.unique();
				infoValues.sort();
				$('#infoFilter select').append('<option value="">Selecciones un área</option>');
				infoValues.each(function(value) {
					$('#infoFilter select').append('<option value="' + value + '">' + value + '</option>');
				});
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			$('#infoFilter select').on('change', function() {
				var selectedInfo = $(this).val();
				if (!selectedInfo) {
					table.column(6).search($('#parentFilter select').val()).draw();
					$('#subInfoFilter select').empty();
					return;
				}
				table.column(7).search(selectedInfo).draw();
				$('#subInfoFilter select').empty();
				var subInfoValues = table
					.column(8)
					.data()
					.filter(function(value, index) {
						return (
							table.column(6).data()[index] === $('#parentFilter select').val() &&
							table.column(7).data()[index] === selectedInfo
						);
					})
					.unique();
				subInfoValues.sort();				
				subInfoValues.each(function(value) {
					$('#subInfoFilter select').append('<option value="' + value + '">' + value + '</option>');
				});
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			$('#subInfoFilter select').on('change', function() {
				var selectedSubInfo = $(this).val();
				if (!selectedSubInfo) {
					table.column(7).search($('#infoFilter select').val()).draw();
					return;
				}
				table.column(8).search(selectedSubInfo).draw();
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});

			$('#check-toggle-2').on('click', function() {
				if (this.checked) {
					table.rows({search:'applied'}).select()
				} else {
					table.rows({search:'applied'}).deselect();
				}
			});

			$("#aprob").on("click", function () {
				var obsd = [];
				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(18).find("input").val();
					obsd.push(obs);
				});
				const options = {
					day: '2-digit',
					month: '2-digit',
					year: 'numeric',
					hour: '2-digit',
					minute: '2-digit',
					second: '2-digit',
					hour12: false // Para que se muestre en formato de 24 horas
				};
				const clientDate = new Date().toLocaleString('es-CL', options);
				var datos = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					datos.push({
						idt: value[1], 
						fecha: value[2], 
						estado: value[3], 
						tipo: value[4], 
						tag: value[5], 
						ger: value[6],
						area: value[7],
						sector: value[8],
						ubi: value[9],
						tec: value[10],
						estequi: value[11],
						estadoequi: value[12],
						repu: value[13],
						clientDate: clientDate,
						obs: obsd[index]
					});
				});
				var idt = [];
				var rows_selected = table.rows({selected: true}).data();
				$.each(rows_selected, function (index, value) {
					idt.push(value[1]);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea aprobar estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
				}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/aprobaciones",
								type: "POST", 	 	
								data: {
									idt,
									datos,
									obsd					
								},
								beforeSend: function() {
									swal({
									title: "Aprobando",
									text: "Espere un momento por favor...",
									imageUrl:"/img/Spinner-1s-200px2.gif",
									showConfirmButton: false,
									allowOutsideClick: false
									});
								}
								}).done(function (data) {
								swal({
									title: "¡SAPMA!",
									text: "Tareas aprobadas",
									type: "success",
									confirmButtonText: "Aceptar",
									allowOutsideClick: false
								});	
								setTimeout(function () {
									location.reload();
								}, 1000);		
							}); 
						} else {
							swal("¡SAPMA!", "Tareas no aprobadas", "error");
						}
					}					
				);		
			});

			$("#aprocli").on("click", function () {
				var obsd = [];
				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(18).find("input").val();
					obsd.push(obs);
				});
				const options = {
					day: '2-digit',
					month: '2-digit',
					year: 'numeric',
					hour: '2-digit',
					minute: '2-digit',
					second: '2-digit',
					hour12: false // Para que se muestre en formato de 24 horas
				};
				const clientDate = new Date().toLocaleString('es-CL', options);
				var datos = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					datos.push({
						idt: value[1], 
						fecha: value[2], 
						estado: value[3], 
						tipo: value[4], 
						tag: value[5], 
						ger: value[6],
						area: value[7],
						sector: value[8],
						ubi: value[9],
						tec: value[10],
						estequi: value[11],
						estadoequi: value[12],
						repu: value[13],
						clientDate: clientDate,
						obs: obsd[index]
					});
				});
				var idt = [];
				var rows_selected = table.rows({selected: true}).data();
				$.each(rows_selected, function (index, value) {
					idt.push(value[1]);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea aprobar estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
				}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/aprobaciones",
								type: "POST", 	 	
								data: {
									idt,
									datos,
									obsd					
								},
								beforeSend: function() {
									swal({
									title: "Aprobando",
									text: "Espere un momento por favor...",
									imageUrl:"/img/Spinner-1s-200px2.gif",
									showConfirmButton: false,
									allowOutsideClick: false
									});
								}
								}).done(function (data) {
								swal({
									title: "¡SAPMA!",
									text: "Tareas aprobadas",
									type: "success",
									confirmButtonText: "Aceptar",
									allowOutsideClick: false
								});	
								setTimeout(function () {
									location.reload();
								}, 000);		
							}); 
						} else {
							swal("¡SAPMA!", "Tareas no aprobadas", "error");
						}
					}					
				);		
			});

			$("#aprobb").on("click", function () {
				var obsd = [];
				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				const options = {
					day: '2-digit',
					month: '2-digit',
					year: 'numeric',
					hour: '2-digit',
					minute: '2-digit',
					second: '2-digit',
					hour12: false // Para que se muestre en formato de 24 horas
				};
				const clientDate = new Date().toLocaleString('es-CL', options);
				var datos = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					datos.push({
						idt: value[1], 
						fecha: value[2], 
						estado: value[3], 
						tipo: value[4], 
						tag: value[5], 
						ger: value[6],
						area: value[7],
						sector: value[8],
						ubi: value[9],
						tec: value[10],
						estequi: value[11],
						estadoequi: value[12],
						repu: value[13],
						clientDate: clientDate,
						obs: obsd[index]
					});
				});
				var idt = [];
				var rows_selected = table.rows({selected: true}).data();
				$.each(rows_selected, function (index, value) {
					idt.push(value[1]);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea aprobar estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/aprobacionesb",
								type: "POST", 	 	
								data: {
									idt,
									datos,
									obsd					
								},
								beforeSend: function() {
									swal({
									title: "Aprobando",
									text: "Espere un momento por favor...",
									imageUrl:"/img/Spinner-1s-200px2.gif",
									showConfirmButton: false,
									allowOutsideClick: false
									});
								}
								}).done(function (data) {
								swal({
									title: "¡SAPMA!",
									text: "Tareas aprobadas",
									type: "success",
									confirmButtonText: "Aceptar",
									allowOutsideClick: false
								});	
								setTimeout(function () {
									location.reload();
								}, 000);		
							}); 
						} else {
							swal("¡SAPMA!", "Tareas no aprobadas", "error");
						}
					}					
				);		
			});

			$("#aproba").on("click", function () {
				var obsd = [];
				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				const options = {
					day: '2-digit',
					month: '2-digit',
					year: 'numeric',
					hour: '2-digit',
					minute: '2-digit',
					second: '2-digit',
					hour12: false // Para que se muestre en formato de 24 horas
				};
				const clientDate = new Date().toLocaleString('es-CL', options);
				var datos = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					datos.push({
						idt: value[1], 
						fecha: value[2], 
						estado: value[3], 
						tipo: value[4], 
						tag: value[5], 
						ger: value[6],
						area: value[7],
						sector: value[8],
						ubi: value[9],
						tec: value[10],
						estequi: value[11],
						estadoequi: value[12],
						repu: value[13],
						clientDate: clientDate,
						obs: obsd[index]
					});
				});
				var idt = [];
				var rows_selected = table.rows({selected: true}).data();
				$.each(rows_selected, function (index, value) {
					idt.push(value[1]);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea aprobar estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					},function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/aprobacionesa",
								type: "POST", 	 	
								data: {
									idt,
									datos,
									obsd					
								},
								beforeSend: function() {
									swal({
									title: "Aprobando",
									text: "Espere un momento por favor...",
									imageUrl:"/img/Spinner-1s-200px2.gif",
									showConfirmButton: false,
									allowOutsideClick: false
									});
								}
								}).done(function (data) {
								swal({
									title: "¡SAPMA!",
									text: "Tareas aprobadas",
									type: "success",
									confirmButtonText: "Aceptar",
									allowOutsideClick: false
								});	
								setTimeout(function () {
									location.reload();
								}, 000);		
							}); 
						} else {
							swal("¡SAPMA!", "Tareas no aprobadas", "error");
						}
					}					
				);		
			});

			$("#aprobd").on("click", function () {
				var obsd = [];
				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				const options = {
					day: '2-digit',
					month: '2-digit',
					year: 'numeric',
					hour: '2-digit',
					minute: '2-digit',
					second: '2-digit',
					hour12: false // Para que se muestre en formato de 24 horas
				};
				const clientDate = new Date().toLocaleString('es-CL', options);
				var datos = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					datos.push({
						idt: value[1], 
						fecha: value[2], 
						estado: value[3], 
						tipo: value[4], 
						tag: value[5], 
						ger: value[6],
						area: value[7],
						sector: value[8],
						ubi: value[9],
						tec: value[10],
						estequi: value[11],
						estadoequi: value[12],
						repu: value[13],
						clientDate: clientDate,
						obs: obsd[index]
					});
				});
				var idt = [];
				var rows_selected = table.rows({selected: true}).data();
				$.each(rows_selected, function (index, value) {
					idt.push(value[1]);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea aprobar estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/aprobacionesd",
								type: "POST", 	 	
								data: {
									idt,
									datos,
									obsd					
								},
								beforeSend: function() {
									swal({
									title: "Aprobando",
									text: "Espere un momento por favor...",
									imageUrl:"/img/Spinner-1s-200px2.gif",
									showConfirmButton: false,
									allowOutsideClick: false
									});
								}
								}).done(function (data) {
								swal({
									title: "¡SAPMA!",
									text: "Tareas aprobadas",
									type: "success",
									confirmButtonText: "Aceptar",
									allowOutsideClick: false
								});	
								setTimeout(function () {
									location.reload();
								}, 000);		
							}); 
						} else {
							swal("¡SAPMA!", "Tareas no aprobadas", "error");
						}
					}					
				);		
			});

			$("#aprobe").on("click", function () {
				var obsd = [];
				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				const options = {
					day: '2-digit',
					month: '2-digit',
					year: 'numeric',
					hour: '2-digit',
					minute: '2-digit',
					second: '2-digit',
					hour12: false // Para que se muestre en formato de 24 horas
				};
				const clientDate = new Date().toLocaleString('es-CL', options);
				var datos = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					datos.push({
						idt: value[1], 
						fecha: value[2], 
						estado: value[3], 
						tipo: value[4], 
						tag: value[5], 
						ger: value[6],
						area: value[7],
						sector: value[8],
						ubi: value[9],
						tec: value[10],
						estequi: value[11],
						estadoequi: value[12],
						repu: value[13],
						clientDate: clientDate,
						obs: obsd[index]
					});
				});
				var idt = [];
				var rows_selected = table.rows({selected: true}).data();
				$.each(rows_selected, function (index, value) {
					idt.push(value[1]);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea aprobar estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/aprobacionese",
								type: "POST", 	 	
								data: {
									idt,
									datos,
									obsd					
								},
								beforeSend: function() {
									swal({
									title: "Aprobando",
									text: "Espere un momento por favor...",
									imageUrl:"/img/Spinner-1s-200px2.gif",
									showConfirmButton: false,
									allowOutsideClick: false
									});
								}
								}).done(function (data) {
								swal({
									title: "¡SAPMA!",
									text: "Tareas aprobadas",
									type: "success",
									confirmButtonText: "Aceptar",
									allowOutsideClick: false
								});	
								setTimeout(function () {
									location.reload();
								}, 000);		
							}); 
						} else {
							swal("¡SAPMA!", "Tareas no aprobadas", "error");
						}
					}					
				);		
			});

			

			$("#readcli").on("click", function () {
				var idt = [];
				var obsd = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					idt.push(value[0]);
				});

				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(18).find("input").val();
					obsd.push(obs);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea RECHAZAR estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/rechazos",
								type: "POST", 	 	
								data: {
									idt,
									obsd					
								}
								
							}); 
							swal("¡SAPMA!", "Tareas rechazadas", "success");
							setTimeout(function () {
								location.reload();
							}, 3000);
						} else {
							swal("¡SAPMA!", "Tareas no rechazadas", "error");
						}
					}					
				);		
			});

			$("#rechazar").on("click", function () {
				var idt = [];
				var obsd = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					idt.push(value[0]);
				});

				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(18).find("input").val();
					obsd.push(obs);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea RECHAZAR estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/rechazos",
								type: "POST", 	 	
								data: {
									idt,
									obsd					
								}
								
							}); 
							swal("¡SAPMA!", "Tareas rechazadas", "success");
							setTimeout(function () {
								location.reload();
							}, 3000);
						} else {
							swal("¡SAPMA!", "Tareas no rechazadas", "error");
						}
					}					
				);		
			});

			$("#rechazarb").on("click", function () {
				var idt = [];
				var obsd = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					idt.push(value[0]);
				});

				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea RECHAZAR estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/rechazosb",
								type: "POST", 	 	
								data: {
									idt,
									obsd					
								}
								
							}); 
							swal("¡SAPMA!", "Tareas rechazadas", "success");
							setTimeout(function () {
								location.reload();
							}, 3000);
						} else {
							swal("¡SAPMA!", "Tareas no rechazadas", "error");
						}
					}					
				);		
			});

			$("#rechazara").on("click", function () {
				var idt = [];
				var obsd = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					idt.push(value[0]);
				});

				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea RECHAZAR estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					}, function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/rechazosa",
								type: "POST", 	 	
								data: {
									idt,
									obsd					
								}
								
							}); 
							swal("¡SAPMA!", "Tareas rechazadas", "success");
							setTimeout(function () {
								location.reload();
							}, 1000);
						} else {
							swal("¡SAPMA!", "Tareas no rechazadas", "error");
						}
					}					
				);		
			});

			$("#rechazard").on("click", function () {
				var idt = [];
				var obsd = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					idt.push(value[0]);
				});

				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea RECHAZAR estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					},function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/rechazosd",
								type: "POST", 	 	
								data: {
									idt,
									obsd					
								}
								
							}); 
							swal("¡SAPMA!", "Tareas rechazadas", "success");
							setTimeout(function () {
								location.reload();
							}, 1000);
						} else {
							swal("¡SAPMA!", "Tareas no rechazadas", "error");
						}
					}					
				);		
			});

			$("#rechazare").on("click", function () {
				var idt = [];
				var obsd = [];
				var data1 = table.rows({selected: true}).data();
				$.each(data1, function (index, value) {
					idt.push(value[0]);
				});

				var data = table.rows({selected: true}).nodes();
				$.each(data, function (index, value) {
					var obs = $(value).find("td").eq(15).find("input").val();
					obsd.push(obs);
				});
				swal({
				title: "¡SAPMA!",
				text: "¿Desea RECHAZAR estas tareas?",
				type: "warning",
				showCancelButton: true,
        		confirmButtonClass: "btn-primary",
        		confirmButtonText: "Si",
        		cancelButtonText: "No",
        		closeOnConfirm: false      
					},function(isConfirm) {
						if (isConfirm) {
							$.ajax({
								url: "/rechazose",
								type: "POST", 	 	
								data: {
									idt,
									obsd					
								}
								
							}); 
							swal("¡SAPMA!", "Tareas rechazadas", "success");
							setTimeout(function () {
								location.reload();
							}, 1000);
						} else {
							swal("¡SAPMA!", "Tareas no rechazadas", "error");
						}
					}					
				);		
			});

			$("#pdfs").on("click", function () {
			var rows_selected = table.rows({selected: true}).data();
			var idpdf = [];
			var codigo = [];
			$.each(rows_selected, function (index, value) {
				idpdf.push(value[0]);
			});

			$.each(rows_selected, function (index, value) {
				codigo.push(value[5]);
			});

			$.ajax({
				url: "/pdfs",
				type: "POST",
				data: {
					idpdf,
					codigo
				},
				beforeSend: function() {
					swal({
					title: "Generando PDFs",
					text: "Espere un momento por favor...",
					imageUrl:"/img/Spinner-1s-200px2.gif",
					showConfirmButton: false,
					allowOutsideClick: false
					});
				}
				}).done(function (data) {
				swal({
					title: "PDFs Generados",
					text: "Se han agregado los PDFs a un archivo comprimido",
					type: "success",
					confirmButtonText: "Aceptar",
					allowOutsideClick: false
				}, function (isConfirm) {
					if (isConfirm) {
					window.location.href = "/archivo";
					}
				});
				});

			});
		$("#pdfs1").on("click", function () {
			var rows_selected = table.rows({selected: true}).data();
			var idpdf = [];
			var codigo= [];
			$.each(rows_selected, function (index, value) {
				idpdf.push(value[0]);
			});

			$.each(rows_selected, function (index, value) {
				codigo.push(value[5]);
			});
				window.location.href = "/archivo/" + idpdf + "/" + codigo;		
			});
	});

    </script>
</body>