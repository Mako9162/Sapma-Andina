<body class="with-side-menu">
	{{> navbar }}
	<div class="mobile-menu-left-overlay-"></div>
	{{> nav }}
	<div class="page-content">
		<div class="container-fluid">
			<header class="section-header">
				<div class="tbl">
					<div class="tbl-row">
						<div class="tbl-cell">
							<h3>Tareas Generales</h3>
							<ol class="breadcrumb breadcrumb-simple">
								<li><a href="/home">Inicio</a></li>
								<li class="active">Tareas</li>
							</ol>
						</div>
						<div class="form-group float-right">
                            <button type="button" class="btn btn-rounded btn-warning" id="pdfs" name="pdfs" hidden="true" ><i class="fa fa-file-pdf-o"></i></button>
							<button type="button" class="btn btn-rounded btn-warning" id="pdfs1" name="pdfs1" hidden="true" ><i class="fa fa-file-pdf-o"></i></button>
						</div>
					</div>
				</div>
						<style>
						.dataTables_filter {
							float: left;
						}
						.dt-buttons {
							float: right;
						}
						.no-seleccionable {
							cursor: not-allowed;
							pointer-events: none;
						}
					</style>
			</header>
			<div class="box-typical box-typical-padding">
				<div class="row">
					<form action="/tgenerales" method="post" return="false">
						<div class="col-md-3" id="ano">
							<label class="form-label" for="date3">Seleccione año</label>
							<select class="form-control" name="date3" id="date3"></select>
						</div>
						<div class="col-md-3" id="mes">
							<label class="form-label" for="date4">Seleccione mes</label>
							<select class="form-control" name="date4" id="date4">
								<option value="">--Seleccione un mes--</option>
								<option value="1">Enero</option>
								<option value="2">Febrero</option>
								<option value="3">Marzo</option>
								<option value="4">Abril</option>
								<option value="5">Mayo</option>
								<option value="6">Junio</option>
								<option value="7">Julio</option>
								<option value="8">Agosto</option>
								<option value="9">Septiembre</option>
								<option value="10">Octubre</option>
								<option value="11">Noviembre</option>
								<option value="12">Diciembre</option>  
							</select> 
						</div>
						<div class="col-md-3">
							<label class="form-label" id="buscar">Buscar una Tarea</label>
							<input class="form-control" id="tarea" name="tarea" placeholder="Ingrese un ID de Tarea">
						</div>
						<div class="col-md-3">
							<label class="form-label" id="buscar" style="color: aliceblue;">.</label>
							<button type="submit" name="buscar" id="buscar" class="btn btn-rounded btn-primary " return="false">Filtrar</button>
						</div>
						<div class="col-md-12 col-xs-12" >
							<h5 class="m-t-lg with-border"><strong></strong></h5>
						</div>
				</div>
					{{#if title }}
						<div class="alert alert-danger" role="alert">
							{{ title }}
						</div>
					{{/if}}
					<br>
					<style>
						#check-toggle-1:checked + label::before {
							background-color: #f00;
							border-color: #f00;
						}
						#check-toggle-3:checked + label::before {
							background-color: #f00;
							border-color: #f00;
						}
						#check-toggle-4:checked + label::before {
							background-color: #f00;
							border-color: #f00;
						}
						#check-toggle-2:checked + label::before {
							background-color: rgb(14, 228, 18);
							border-color: rgb(14, 228, 18);
						}
					</style>
					<div class="checkbox-toggle">
						<input type="checkbox" id="check-toggle-1">
						<label for="check-toggle-1">Anular Tareas</label>
					</div>		
					<div class="checkbox-toggle" id="anula_todo">
						<input type="checkbox" id="check-toggle-3">
						<label for="check-toggle-3">Anular Tareas usando lista</label>
					</div>			
					<div class="checkbox-toggle" id="second-div" style="display: none;">
						<input type="checkbox" id="check-toggle-2" >
						<label for="check-toggle-2">Seleccionar todo</label>
					</div>
					<div class="checkbox-toggle" id="anula_ex">
						<input type="checkbox" id="check-toggle-4" >
						<label for="check-toggle-4">Anular usando archivo</label>
					</div>

					<table id="tabla_prot" class="table table-bordered table-striped table-vcenter js-dataTable-full">
						<thead>
							<tr>
								<th title="Seleccionar todo"></th>
								<th>Tarea</th>
								<th>Fecha</th>
								<th>Tag</th>
								<th>Técnico planificado</th>
								<th>Gerencia</th>
								<th>Area</th>
								<th>Sector</th>
								<th>Tipo de servicio</th>
								<th>Estado de tarea</th>
								<th>Estado equipo</th>
								<th>Observación estado</th>
								<th>Repuestos</th>
								<th>Ver</th>
							</tr>
						<tbody>
							{{#each prot}}
							<tr>
								<td>{{IDT}}</td>
								<td>{{IDT}}</td>
								<td>{{FECHA}}</td>
								<td>{{CODIGO}}</td>
								<td>{{TECNICO}}</td>
								<td>{{GERENCIA}}</td>
								<td>{{AREA}}</td>
								<td>{{SECTOR}}</td>
								<td>{{SERVICIO}}</td>
								<td>{{ESTADO}}</td>
								<td>{{ESTADO_EQUIPO}}</td>
								<td>{{OBSERVACION_ESTADO}}</td>
								<td>{{REPUESTOS}}</td>
								{{#ifEquals ESTADO "Terminada sin validar"}}
									<td><center><a href="/protocolo/{{ IDT }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>	
								{{else}}
									{{#ifEquals ESTADO "Terminada validada"}}
										<td><center><a href="/protocolo/{{ IDT }}" class="btn btn-inline btn-primary btn-sm ladda-button" target="_blank"><i class="fa fa-file-archive-o"></i></a></center></td>
									{{else}}
										<td><center></center></td>
									{{/ifEquals}}
								{{/ifEquals}}
							</tr>
							{{/each}}
						</tbody>
					</table>
					</form>
					<form id="form_todo" style="display: none;">
						<br>
						<br>
						<div class="form-group row">
							<label for="exampleSelect" class="col-sm-2 form-control-label">* Ingrese una lista de tareas separadas por coma:</label>
							<div class="col-sm-10">
								<textarea rows="5" class="form-control" id="tareas_lista"></textarea>
							</div>
						</div>
						<br>
					</form>
					<form id="form_ex" style="display: none;">
						<br>
						<br>
						<div class="form-group">
							<label for="file-input">* Descarga la plantilla, luego ingresa los IDs de las tareas a anular en el archivo excel. Selecciona el archivo y anula las tareas.</label>
							<br>
							<input type="file" class="form-control" id="file-input" accept=".csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">
						</div>
					</form>
					<button class="btn btn-rounded btn-danger" id="anula_lista" name="anula_lista" hidden="true">Anular Tareas</button>
					<button class="btn btn-rounded btn-danger" id="anular1" name="anular1" hidden="true">Anular Tareas</button>
					<br>
					<button class="btn btn-rounded btn-danger" id="anular2" name="anular2" hidden="true">Anular Tareas</button>
					<button class="btn btn-rounded btn-success float-right" id="excel" name="excel" hidden="true">Descarga plantilla</button>
			</div>
		</div>	
	</div>
	<script src="/js/lib/jquery/jquery.min.js"></script>
	<script src="/js/lib/tether/tether.min.js"></script>
	<script src="/js/lib/bootstrap/bootstrap.min.js"></script>
	<script src="/js/plugins.js"></script>
	<script src="/js/app.js"></script>
	<script src="/js/lib/datatables-net/datatables.min.js"></script>
	<script src="/js/lib/bootstrap-sweetalert/sweetalert.min.js"></script>
	<script src="/js/lib/summernote/summernote.min.js"></script>
	<script src="/js/lib/fancybox/jquery.fancybox.pack.js"></script>
	<script src="/js/summernote-ES.js"></script>
	<script src="/js/lib/select2/select2.full.min.js"></script>
	<script type="text/javascript" src="https://gyrocode.github.io/jquery-datatables-checkboxes/1.2.12/js/dataTables.checkboxes.min.js"></script>
	<script>
	let select = document.getElementById('date3');
	let currentYear = new Date().getFullYear();
	let startYear = currentYear - 2;
	let endYear = currentYear;
	let option = document.createElement('option');
	option.value = '';
	option.text = '--Seleccione un año--';
	select.appendChild(option);

	for (let year = endYear; year >= startYear; year--) {
		let option = document.createElement('option');
		option.value = year;
		option.text = year;
		select.appendChild(option);
	}
	</script>
	<script>
		var table;
		$(document).ready(function () {		
			var checkTogglePressed = false;
			table = $('#tabla_prot').DataTable({
				'columnDefs': [
					{
						'targets': 0,
						'checkboxes': {
							'selectRow': true,
							'selectAll': false
						}
					}
				],
				'select': {
					'style': 'multi'
				},
				"dom": 'Bf<"filters">rtip',
				"searching": true,
				"lengthChange": false,
				"colReorder": true,
				"buttons": [
						{
							"extend": 'excelHtml5',
							"text": '<i class="fa fa-file-excel-o"></i>',
							"title": 'Tareas',
							"titleAttr": 'Exportar a Excel',
							"className": 'btn btn-rounded btn-success',
							"exportOptions": {
							"columns": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
							},
							customize: function(xlsx) {
							const sheet = xlsx.xl.worksheets['sheet1.xml'];
								$('row:first c', sheet).attr('s', '47');
							}
						}, 
				],
				initComplete: function() {
				$('.filters').html(`
					<style>
					#parentFilter {
					float: left;
					margin-left: 15px;
					}

					#parentSelect {
					height: 38px;
					width: 100%;
					border: 1px solid rgb(227, 227, 227);
					border-radius: 4px;
					}

					#infoFilter {
					float: left;
					margin-left: 15px;
					}

					#infoSelect {
					height: 38px;
					width: 100%;
					border: 1px solid rgb(227, 227, 227);
					border-radius: 4px;
					}

					#subInfoFilter {
					float: left;
					margin-left: 15px;
					}

					#subInfoSelect {
					height: 38px;
					width: 100%;
					border: 1px solid rgb(227, 227, 227);
					border-radius: 4px;
					}

					@media (max-width: 768px) {
					#parentFilter,
					#infoFilter,
					#subInfoFilter {
						float: none;
						margin-left: 0;
					}

					#parentSelect,
					#infoSelect,
					#subInfoSelect {
						width: 100%;
					}
					}
					</style>			
					<div>
						<div id="parentFilter">
							<select id="parentSelect" width: 50%;>
							</select>
						</div>
						<div id="infoFilter">
							<select id="infoSelect" width: 50%;>
							</select>
						</div>
						<div id="subInfoFilter">
							<select id="subInfoSelect" width: 50%;">
							</select>
						</div>
					</div>
				`);
				},
				drawCallback: function() {
					// Especifico el índice de la columna en la que deseo buscar valores duplicados
					var indiceColumna = 3;

					// Creo un objeto para almacenar los valores de la columna especificada
					var valoresColumna = {};

					// Recorro las filas de la tabla
					this.api().rows().every(function() {
						// Obtiego el valor de la celda en la columna especificada
						var celda = this.cell(this.index(), indiceColumna).node();
						var valorCelda = $(celda).text();

						// Verific0 si el valor ya existe en el objeto "valoresColumna"
						if (valorCelda in valoresColumna) {
							// Si el valor ya existe, cambi0 el color de las letras de ambas filas a rojo
							$(celda).closest('tr').find('td').css('color', 'red');
							$(valoresColumna[valorCelda]).closest('tr').find('td').css('color', 'red');
						} else {
							// Si el valor no existe, se agrega al objeto "valoresColumna"
							valoresColumna[valorCelda] = celda;
						}
					});
				},
				"bDestroy": true, 	
				"scrollX": true,
				"fixedColumns":   {
					"leftColumns": 4//Le indico que deje fijas solo las 2 primeras columnas
				},
				"bInfo": true,
				"iDisplayLength": 20,
				"autoWidth": true,
				"language": {
					"sProcessing": "Procesando...",
					"sLengthMenu": "Mostrar _MENU_ registros",
					"sZeroRecords": "No se encontraron resultados",
					"sEmptyTable": "Ningún dato disponible en esta tabla",
					"sInfo": "Mostrando un total de _TOTAL_ registros",
					"sInfoEmpty": "Mostrando un total de 0 registros",
					"sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
					"sInfoPostFix": "",
					"sSearch": "Buscar:",
					"sUrl": "",
					"sInfoThousands": ".",
					"sLoadingRecords": "Cargando...",
					"oPaginate": {
						"sFirst": "Primero",
						"sLast": "Último",
						"sNext": "Siguiente",
						"sPrevious": "Anterior"
					},
					"oAria": {
						"sSortAscending": ": Activar para ordenar la columna de manera ascendente",
						"sSortDescending": ": Activar para ordenar la columna de manera descendente"
					},
					"select" : {
						"rows" : {
							"_" : "Has seleccionado %d filas",
							"0" : "Click en una fila para seleccionar",
							"1" : "Has seleccionado 1 fila"
						}
					}
				},
				}).on( 'select.dt deselect.dt', function ( e, dt, type, indexes ) {	
				var count = table.rows( { selected: true } ).count();
				if (!checkTogglePressed){
					if (count > 0) {
						$("#pdfs").prop("disabled", false);
					} else {
						$("#pdfs").prop("disabled", true);
					}

					if (count === 1) {
						$("#pdfs1").prop("hidden", false);
						$("#pdfs").prop("hidden", true);
					} else if (count > 1) {
						$("#pdfs").prop("hidden", false);
						$("#pdfs1").prop("hidden", true);
					} else {
						$("#pdfs").prop("hidden", true);
						$("#pdfs1").prop("hidden", true);
					}
				}
		}).columns.adjust();

			var rowsSelectable = false;

			table.on('select', function(e, dt, type, indexes) {
				if (type === 'row' && !rowsSelectable) {
					var data = table.rows(indexes).data().toArray();
					if (data[0][8] === 'Descargada' || data[0][8] === 'Anulada' || data[0][8] === 'Planificada' || data[0][8] === 'No Realizada' || data[0][8] === 'Archivada') {
						table.rows(indexes).deselect();
					}
				}
			});

			var state = false;

			$('#check-toggle-1').on('click', function() {
				rowsSelectable = !rowsSelectable;
				table.rows('.selected').deselect();
				checkTogglePressed = !checkTogglePressed;	
				if (state) {
					$("#anular1").prop("hidden", true);
					$("#second-div").hide();
					$("#anula_todo").show();
					$("#anula_ex").show();
				} else {
					$("#anula_todo").hide();
					$("#anula_ex").hide();
					$("#anular1").prop("hidden", false);
					$("#pdfs1").prop("hidden", true);
					$("#pdfs").prop("hidden", true);
					$("#second-div").show();
					
				}
				state = !state;
			});
			

			$('#check-toggle-2').on('click', function() {
				if (this.checked) {
					table.rows({search:'applied'}).select()
				} else {
					table.rows({search:'applied'}).deselect();
				}
			});

			var state1 = false;

			$('#check-toggle-3').on('click', function() {
				if (state1) {
					$('#check-toggle-1').prop("disabled", false);
					$("#tabla_prot").parents('.dataTables_wrapper').first().show();
					$("#form_todo").hide();
					$("#anula_lista").prop("hidden", true);
					$('#check-toggle-4').prop("disabled", false);
				}else{
					$('#check-toggle-1').prop("disabled", true);
					$('#check-toggle-4').prop("disabled", true);
					$("#tabla_prot").parents('.dataTables_wrapper').first().hide();
					$("#form_todo").show();
					$("#anula_lista").prop("hidden", false);
				}
				
				state1 = !state1;
			});

			var state2 = false;

			$('#check-toggle-4').on('click', function() {
				if (state2) {
					$('#check-toggle-1').prop("disabled", false);
					$("#tabla_prot").parents('.dataTables_wrapper').first().show();
					$("#form_todo").hide();
					$("#form_ex").hide();
					$('#check-toggle-3').prop("disabled", false);
					$('#anular2').prop("hidden", true);
					$('#excel').prop("hidden", true);
				}else{
					$('#check-toggle-1').prop("disabled", true);
					$('#check-toggle-3').prop("disabled", true);
					$("#form_ex").show();
					$("#tabla_prot").parents('.dataTables_wrapper').first().hide();
					$('#anular2').prop("hidden", false);
					$('#excel').prop("hidden", false);
				}
				
				state2 = !state2;
			});
			
			var parentValues = table.column(4).data().unique();
			parentValues.sort();
			$('#parentFilter select').append('<option value="">Seleccione una gerencia</option>');
			parentValues.each(function(value) {
				$('#parentFilter select').append('<option value="' + value + '">' + value + '</option>');
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			$('#parentFilter select').on('change', function() {
				var selectedParent = $(this).val();
				if (!selectedParent) {
					table.search('').columns().search('').draw();
					$('#infoFilter select').empty();
					$('#subInfoFilter select').empty();
					return;
				}
				table.column(4).search(selectedParent).draw();
				$('#infoFilter select').empty();
				$('#subInfoFilter select').empty();
				var infoValues = table
					.column(5)
					.data()
					.filter(function(value, index) {
						return table.column(4).data()[index] === selectedParent;
					})
					.unique();
				infoValues.sort();
				$('#infoFilter select').append('<option value="">Selecciones un área</option>');
				infoValues.each(function(value) {
					$('#infoFilter select').append('<option value="' + value + '">' + value + '</option>');
				});
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			$('#infoFilter select').on('change', function() {
				var selectedInfo = $(this).val();
				if (!selectedInfo) {
					table.column(4).search($('#parentFilter select').val()).draw();
					$('#subInfoFilter select').empty();
					return;
				}
				table.column(5).search(selectedInfo).draw();
				$('#subInfoFilter select').empty();
				var subInfoValues = table
					.column(6)
					.data()
					.filter(function(value, index) {
						return (
							table.column(4).data()[index] === $('#parentFilter select').val() &&
							table.column(5).data()[index] === selectedInfo
						);
					})
					.unique();
				subInfoValues.sort();				
				subInfoValues.each(function(value) {
					$('#subInfoFilter select').append('<option value="' + value + '">' + value + '</option>');
				});
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			$('#subInfoFilter select').on('change', function() {
				var selectedSubInfo = $(this).val();
				if (!selectedSubInfo) {
					table.column(5).search($('#infoFilter select').val()).draw();
					return;
				}
				table.column(6).search(selectedSubInfo).draw();
				table.on('draw.dt', function() {
					table.rows().deselect();
				});
			});
			
		$("#anular1").on("click", function (){
			var rows_selected = table.rows({selected: true}).data();
			if (rows_selected.length > 0) {
				var datos = [];
				$.each(rows_selected, function (index, value) {
					datos.push({
						idt: value[1],
						fecha: value[2],
						codigo: value[3],
						ger: value[4],
						area: value[5],
						sector: value[6],
						servicio: value[7]
					});
				});
				swal({
					title: '¡SAPMA!',
					text: '¿Desea anular estas tareas?',
					type: 'input',
					inputPlaceholder: 'Ingrese su comentario aquí',
					showCancelButton: true,
					confirmButtonClass: "btn-primary",
					confirmButtonText: "Si",
					cancelButtonText: "No",
					closeOnConfirm: false
					},function(inputValue){
						if(inputValue!==false){
							$.ajax({
								url:'/anular',
								type:'POST',
								data:{
									datos,
									comentario:inputValue || 'TAREA ANULADA - AJUSTE INTERN0'
								}
							});
							swal('¡SAPMA!','Tareas anuladas','success');
							setTimeout(function(){
								location.reload();
								},1000);
						}else{
							swal('¡SAPMA!','Tareas no anuladas','error');
						}
				});
			}else{
				swal('Error', 'Debe seleccionar alguna fila para anular', 'error');
			}	
		});	

		$("#anular2").on("click", function (){
		const input = document.querySelector('#file-input');
    	const file = input.files[0];
    	if (file) {
			const formData = new FormData();
			formData.append('file', file);
			swal({
				title: '¡SAPMA!',
				text: '¿Desea anular estas tareas?',
				type: 'input',
				inputPlaceholder: 'Ingrese su comentario aquí',
				showCancelButton: true,
				confirmButtonClass: "btn-primary",
				confirmButtonText: "Si",
				cancelButtonText: "No",
				closeOnConfirm: false
			}, function(inputValue) {
				if (inputValue !== false) {
				formData.append('comentario', inputValue || 'TAREA ANULADA - AJUSTE INTERN0');
				$.ajax({
					url:'/anular_ex',
					type:'POST',
					data: formData,
					processData: false,
					contentType: false
				});
				swal('¡SAPMA!','Tareas anuladas','success');
				setTimeout(function() {
					location.reload();
				},1000);
				} else {
				swal('¡SAPMA!','Tareas no anuladas','error');
				}
			});
		}else{
			swal('Error', 'Por favor seleccione un archivo', 'error');
		}
		});

		$("#anula_lista").on("click", function (){
			var textareaValue = $('#tareas_lista').val().trim();
			var numbers = textareaValue.split(',');
				if (/^\d+,\d+(,\d+)*$/.test(textareaValue)) {
					var uniqueNumbers = {};
					var hasDuplicates = false;
					for (var i = 0; i < numbers.length; i++) {
						if (uniqueNumbers[numbers[i]]) {
							hasDuplicates = true;
							break;
						} else {
							uniqueNumbers[numbers[i]] = true;
						}
					}
					if (!hasDuplicates) {
						swal({
							title: '¡SAPMA!',
							text: '¿Desea anular estas tareas?',
							type: 'input',
							inputPlaceholder: 'Ingrese su comentario aquí',
							showCancelButton: true,
							confirmButtonClass: "btn-primary",
							confirmButtonText: "Si",
							cancelButtonText: "No",
							closeOnConfirm: false
							},function(inputValue){
								if(inputValue!==false){
									$.ajax({
										url:'/anular_lista',
										type:'POST',
										data:{
											numbers: numbers,
											comentario:inputValue || 'TAREA ANULADA - AJUSTE INTERN0'
										}
									});
									swal('¡SAPMA!','Tareas anuladas','success');
									setTimeout(function(){
										location.reload();
										},1000);
								}else{
									swal('¡SAPMA!','Tareas no anuladas','error');
								}
						});
					} else {
						swal('Error', 'Por favor no ingreses números repetidos', 'error');
					}
				} else {
					swal('Error', 'Por favor ingresa al menos dos números separados por comas, sin coma en el último número', 'error');
				}
		});	

		const button = document.querySelector('#excel');
			button.addEventListener('click', () => {
			window.location.href = '/download';
		});
		$("#pdfs").on("click", function () {
			var rows_selected = table.rows({selected: true}).data();
			var idpdf = [];
			var codigo = [];
			$.each(rows_selected, function (index, value) {
				idpdf.push(value[0]);
			});

			$.each(rows_selected, function (index, value) {
				codigo.push(value[3]);
			});

			$.ajax({
				url: "/pdfs",
				type: "POST",
				data: {
					idpdf,
					codigo
				},
				beforeSend: function() {
					swal({
					title: "Generando PDFs",
					text: "Espere un momento por favor...",
					imageUrl:"/img/Spinner-1s-200px2.gif",
					showConfirmButton: false,
					allowOutsideClick: false
					});
				}
				}).done(function (data) {
					swal({
						title: "PDFs Generados",
						text: "Se han agregado los PDFs a un archivo comprimido",
						type: "success",
						confirmButtonText: "Aceptar",
						allowOutsideClick: false
					}, function (isConfirm) {
						if (isConfirm) {
						window.location.href = "/archivo";
						}
					});
				});
		});

		$("#pdfs1").on("click", function () {
			var rows_selected = table.rows({selected: true}).data();
			var idpdf = [];
			var codigo= [];
			$.each(rows_selected, function (index, value) {
				idpdf.push(value[0]);
			});

			$.each(rows_selected, function (index, value) {
				codigo.push(value[3]);
			});
				window.location.href = "/archivo/" + idpdf + "/" + codigo;		
		});


	});
    </script>
</body>